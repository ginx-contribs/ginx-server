basePath: /api/
definitions:
  types.AuthLoginOption:
    properties:
      password:
        description: user password
        type: string
      remember:
        description: remember user or not
        type: boolean
      username:
        description: username or email
        type: string
    required:
    - password
    - username
    type: object
  types.AuthRefreshTokenOption:
    properties:
      accessToken:
        description: access token
        type: string
      refreshToken:
        description: refresh token
        type: string
    required:
    - accessToken
    - refreshToken
    type: object
  types.AuthRegisterOption:
    properties:
      code:
        description: verification code from verify email
        type: string
      email:
        description: user email address
        type: string
      password:
        description: user password
        type: string
      username:
        description: username must be alphanumeric
        type: string
    required:
    - code
    - password
    - username
    type: object
  types.AuthResetPasswordOption:
    properties:
      code:
        description: verification code from verify email
        type: string
      email:
        description: user email address
        type: string
      password:
        description: new password
        type: string
    required:
    - code
    - password
    type: object
  types.AuthVerifyCodeOption:
    properties:
      to:
        description: email receiver
        type: string
      usage:
        allOf:
        - $ref: '#/definitions/types.Usage'
        description: 'verify code usage: 1-register 2-reset password'
        maximum: 2
        minimum: 1
    required:
    - usage
    type: object
  types.JobInfo:
    properties:
      cron:
        type: string
      entry:
        type: integer
      name:
        type: string
      next:
        type: integer
      prev:
        type: integer
    type: object
  types.JobPageList:
    properties:
      list:
        items:
          $ref: '#/definitions/types.JobInfo'
        type: array
      total:
        type: integer
    type: object
  types.Response:
    properties:
      code:
        type: integer
      data: {}
      error:
        type: string
      msg:
        type: string
    type: object
  types.TokenResult:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  types.Usage:
    enum:
    - 0
    - 1
    - 2
    type: integer
    x-enum-varnames:
    - UsageUnknown
    - UsageRegister
    - UsageReset
  types.UserInfo:
    properties:
      created_at:
        type: integer
      email:
        type: string
      uid:
        type: string
      username:
        type: string
    type: object
  types.UserSearchResult:
    properties:
      list:
        items:
          $ref: '#/definitions/types.UserInfo'
        type: array
      total:
        type: integer
    type: object
info:
  contact:
    name: ginx-contribs
    url: https://github.com/ginx-contribs/ginx-server
  description: This is swagger generated api documentation, know more information
    about lobby on GitHub.
  license:
    name: MIT LICENSE
    url: https://mit-license.org/
  title: Lobby HTTP API
  version: v0.0.0-Beta
paths:
  /auth/code:
    post:
      consumes:
      - application/json
      description: send verification code mail to specified email address
      parameters:
      - description: AuthVerifyCodeOption
        in: body
        name: AuthVerifyCodeOption
        required: true
        schema:
          $ref: '#/definitions/types.AuthVerifyCodeOption'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
      summary: VerifyCode
      tags:
      - auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: login with password, and returns jwt token pair
      parameters:
      - description: login params
        in: body
        name: loginOption
        required: true
        schema:
          $ref: '#/definitions/types.AuthLoginOption'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/types.TokenResult'
              type: object
      summary: Login
      tags:
      - auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: ask for refresh access token lifetime with refresh token
      parameters:
      - description: refresh params
        in: body
        name: AuthRefreshTokenOption
        required: true
        schema:
          $ref: '#/definitions/types.AuthRefreshTokenOption'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/types.TokenResult'
              type: object
      summary: Refresh
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: register a new user with verification code
      parameters:
      - description: register params
        in: body
        name: AuthRegisterOption
        required: true
        schema:
          $ref: '#/definitions/types.AuthRegisterOption'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
      summary: Register
      tags:
      - auth
  /auth/reset:
    post:
      consumes:
      - application/json
      description: reset user password with verification code
      parameters:
      - description: reset params
        in: body
        name: AuthResetPasswordOption
        required: true
        schema:
          $ref: '#/definitions/types.AuthResetPasswordOption'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
      summary: ResetPassword
      tags:
      - auth
  /job/info:
    get:
      consumes:
      - application/json
      description: get job info
      parameters:
      - in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/types.JobInfo'
              type: object
      summary: Info
      tags:
      - job
  /job/list:
    get:
      consumes:
      - application/json
      description: list jobs by page
      parameters:
      - in: query
        name: page
        type: integer
      - in: query
        name: search
        type: string
      - in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/types.JobPageList'
              type: object
      summary: List
      tags:
      - job
  /job/start:
    post:
      consumes:
      - application/json
      description: start the job
      parameters:
      - in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
      summary: Start
      tags:
      - job
  /job/stop:
    post:
      consumes:
      - application/json
      description: stop the job
      parameters:
      - in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
      summary: Stop
      tags:
      - job
  /ping:
    get:
      consumes:
      - application/json
      description: test server if is available
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Ping
      tags:
      - system
  /pong:
    get:
      consumes:
      - application/json
      description: test if server authentication is working
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Pong
      tags:
      - system
  /user/info:
    get:
      consumes:
      - application/json
      description: get user information by given uid
      parameters:
      - description: uid
        in: query
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/types.UserInfo'
              type: object
      summary: Info
      tags:
      - user
  /user/list:
    get:
      consumes:
      - application/json
      description: list user info by page
      parameters:
      - in: query
        name: page
        required: true
        type: integer
      - in: query
        name: search
        type: string
      - in: query
        name: size
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/types.UserSearchResult'
              type: object
      summary: List
      tags:
      - user
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
